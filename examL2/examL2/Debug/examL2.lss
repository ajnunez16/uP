
examL2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000044e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000004a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004a2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000514  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003f6d  00000000  00000000  00000554  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003b9c  00000000  00000000  000044c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000055c  00000000  00000000  0000805d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  000085bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002ae4  00000000  00000000  000086b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001dd  00000000  00000000  0000b194  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000b371  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  10:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  14:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  18:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  1c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  24:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  28:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  2c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  30:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  34:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  38:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  3c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  40:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  44:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  48:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  4c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  58:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  5c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  60:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  64:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  68:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  6c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  70:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  74:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  7c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  80:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  84:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  88:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  8c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  90:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  94:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  98:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  9c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  fc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 100:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 104:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 108:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 10c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 110:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 114:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 118:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 11c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 120:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 124:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 128:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 12c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 130:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 134:	0c 94 5b 01 	jmp	0x2b6	; 0x2b6 <__vector_77>
 138:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 13c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 140:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 144:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 148:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 14c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__vector_83>
 150:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 154:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 158:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 15c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 160:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 164:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 168:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 16c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 170:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 174:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 178:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 17c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 180:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 184:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 188:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 18c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 190:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 194:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 198:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 19c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	ee e4       	ldi	r30, 0x4E	; 78
 21c:	f4 e0       	ldi	r31, 0x04	; 4
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	a0 30       	cpi	r26, 0x00	; 0
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	0e 94 cf 01 	call	0x39e	; 0x39e <main>
 234:	0c 94 25 02 	jmp	0x44a	; 0x44a <_exit>

00000238 <__bad_interrupt>:
 238:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023c <tcc0_init>:
#define PER2 ((2000000/1024)/2500)	// 2500 Hz

uint16_t arr[] = {0,373,737,1000,373,737,1000,1370};

// initialize the TCC0 timer/counter 
void tcc0_init( void ) {
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	cd b7       	in	r28, 0x3d	; 61
 242:	de b7       	in	r29, 0x3e	; 62
	// Use any valid prescaler/period combination necessary to achieve an overflow time of one second.
	TCD0_CTRLB = 0x00;	// normal mode
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	99 e0       	ldi	r25, 0x09	; 9
 248:	fc 01       	movw	r30, r24
 24a:	10 82       	st	Z, r1
	TCD0_PERL = (uint8_t) PER1;
 24c:	86 e2       	ldi	r24, 0x26	; 38
 24e:	99 e0       	ldi	r25, 0x09	; 9
 250:	21 e0       	ldi	r18, 0x01	; 1
 252:	fc 01       	movw	r30, r24
 254:	20 83       	st	Z, r18
	TCD0_PERH = (uint8_t) ( PER1 >> 8 );
 256:	87 e2       	ldi	r24, 0x27	; 39
 258:	99 e0       	ldi	r25, 0x09	; 9
 25a:	fc 01       	movw	r30, r24
 25c:	10 82       	st	Z, r1
	PMIC_CTRL |= PMIC_MEDLVLEN_bm;
 25e:	82 ea       	ldi	r24, 0xA2	; 162
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	22 ea       	ldi	r18, 0xA2	; 162
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	f9 01       	movw	r30, r18
 268:	20 81       	ld	r18, Z
 26a:	22 60       	ori	r18, 0x02	; 2
 26c:	fc 01       	movw	r30, r24
 26e:	20 83       	st	Z, r18
	sei();
 270:	78 94       	sei
}
 272:	00 00       	nop
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	08 95       	ret

0000027a <tcc1_init>:

// initialize the TCC1 timer/counter
void tcc1_init( void ) {
 27a:	cf 93       	push	r28
 27c:	df 93       	push	r29
 27e:	cd b7       	in	r28, 0x3d	; 61
 280:	de b7       	in	r29, 0x3e	; 62
	// Use any valid prescaler/period combination necessary to achieve an overflow time of one second.
	TCD1_CTRLB = 0x00;	// normal mode
 282:	81 e4       	ldi	r24, 0x41	; 65
 284:	99 e0       	ldi	r25, 0x09	; 9
 286:	fc 01       	movw	r30, r24
 288:	10 82       	st	Z, r1
	TCD1_PERL = (uint8_t) PER2;
 28a:	86 e6       	ldi	r24, 0x66	; 102
 28c:	99 e0       	ldi	r25, 0x09	; 9
 28e:	fc 01       	movw	r30, r24
 290:	10 82       	st	Z, r1
	TCD1_PERH = (uint8_t) ( PER2 >> 8 );
 292:	87 e6       	ldi	r24, 0x67	; 103
 294:	99 e0       	ldi	r25, 0x09	; 9
 296:	fc 01       	movw	r30, r24
 298:	10 82       	st	Z, r1
	PMIC_CTRL |= PMIC_LOLVLEN_bm;
 29a:	82 ea       	ldi	r24, 0xA2	; 162
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	22 ea       	ldi	r18, 0xA2	; 162
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	f9 01       	movw	r30, r18
 2a4:	20 81       	ld	r18, Z
 2a6:	21 60       	ori	r18, 0x01	; 1
 2a8:	fc 01       	movw	r30, r24
 2aa:	20 83       	st	Z, r18
	sei();
 2ac:	78 94       	sei
}
 2ae:	00 00       	nop
 2b0:	df 91       	pop	r29
 2b2:	cf 91       	pop	r28
 2b4:	08 95       	ret

000002b6 <__vector_77>:

ISR(TCD0_OVF_vect){
 2b6:	1f 92       	push	r1
 2b8:	0f 92       	push	r0
 2ba:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 2be:	0f 92       	push	r0
 2c0:	11 24       	eor	r1, r1
 2c2:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 2c6:	0f 92       	push	r0
 2c8:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 2cc:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 2d0:	0f 92       	push	r0
 2d2:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 2d6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 2da:	0f 92       	push	r0
 2dc:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 2e0:	2f 93       	push	r18
 2e2:	8f 93       	push	r24
 2e4:	9f 93       	push	r25
 2e6:	ef 93       	push	r30
 2e8:	ff 93       	push	r31
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	cd b7       	in	r28, 0x3d	; 61
 2f0:	de b7       	in	r29, 0x3e	; 62
	PORTC_OUTTGL = PIN0_bm;
 2f2:	87 e4       	ldi	r24, 0x47	; 71
 2f4:	96 e0       	ldi	r25, 0x06	; 6
 2f6:	21 e0       	ldi	r18, 0x01	; 1
 2f8:	fc 01       	movw	r30, r24
 2fa:	20 83       	st	Z, r18
}
 2fc:	00 00       	nop
 2fe:	df 91       	pop	r29
 300:	cf 91       	pop	r28
 302:	ff 91       	pop	r31
 304:	ef 91       	pop	r30
 306:	9f 91       	pop	r25
 308:	8f 91       	pop	r24
 30a:	2f 91       	pop	r18
 30c:	0f 90       	pop	r0
 30e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 312:	0f 90       	pop	r0
 314:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 318:	0f 90       	pop	r0
 31a:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 31e:	0f 90       	pop	r0
 320:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 324:	0f 90       	pop	r0
 326:	1f 90       	pop	r1
 328:	18 95       	reti

0000032a <__vector_83>:

ISR(TCD1_OVF_vect){
 32a:	1f 92       	push	r1
 32c:	0f 92       	push	r0
 32e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 332:	0f 92       	push	r0
 334:	11 24       	eor	r1, r1
 336:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 33a:	0f 92       	push	r0
 33c:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 340:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 344:	0f 92       	push	r0
 346:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 34a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 34e:	0f 92       	push	r0
 350:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 354:	2f 93       	push	r18
 356:	8f 93       	push	r24
 358:	9f 93       	push	r25
 35a:	ef 93       	push	r30
 35c:	ff 93       	push	r31
 35e:	cf 93       	push	r28
 360:	df 93       	push	r29
 362:	cd b7       	in	r28, 0x3d	; 61
 364:	de b7       	in	r29, 0x3e	; 62
	PORTC_OUTTGL = PIN0_bm;
 366:	87 e4       	ldi	r24, 0x47	; 71
 368:	96 e0       	ldi	r25, 0x06	; 6
 36a:	21 e0       	ldi	r18, 0x01	; 1
 36c:	fc 01       	movw	r30, r24
 36e:	20 83       	st	Z, r18
}
 370:	00 00       	nop
 372:	df 91       	pop	r29
 374:	cf 91       	pop	r28
 376:	ff 91       	pop	r31
 378:	ef 91       	pop	r30
 37a:	9f 91       	pop	r25
 37c:	8f 91       	pop	r24
 37e:	2f 91       	pop	r18
 380:	0f 90       	pop	r0
 382:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 386:	0f 90       	pop	r0
 388:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 38c:	0f 90       	pop	r0
 38e:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 392:	0f 90       	pop	r0
 394:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 398:	0f 90       	pop	r0
 39a:	1f 90       	pop	r1
 39c:	18 95       	reti

0000039e <main>:

int main(void)
{
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	cd b7       	in	r28, 0x3d	; 61
 3a4:	de b7       	in	r29, 0x3e	; 62
    // init ebi s1 and s2 as input
	PORTE_DIRCLR = PIN0_bm | PIN1_bm;
 3a6:	82 e8       	ldi	r24, 0x82	; 130
 3a8:	96 e0       	ldi	r25, 0x06	; 6
 3aa:	23 e0       	ldi	r18, 0x03	; 3
 3ac:	fc 01       	movw	r30, r24
 3ae:	20 83       	st	Z, r18
	// init tc at 1250Hz
	tcc0_init();
 3b0:	0e 94 1e 01 	call	0x23c	; 0x23c <tcc0_init>
	// init tc at 2500 Hz
	tcc1_init();
 3b4:	0e 94 3d 01 	call	0x27a	; 0x27a <tcc1_init>
	// init portc as output for debugging
	PORTC_OUT = 0xFF;
 3b8:	84 e4       	ldi	r24, 0x44	; 68
 3ba:	96 e0       	ldi	r25, 0x06	; 6
 3bc:	2f ef       	ldi	r18, 0xFF	; 255
 3be:	fc 01       	movw	r30, r24
 3c0:	20 83       	st	Z, r18
	PORTC_DIRSET = 0xff;
 3c2:	81 e4       	ldi	r24, 0x41	; 65
 3c4:	96 e0       	ldi	r25, 0x06	; 6
 3c6:	2f ef       	ldi	r18, 0xFF	; 255
 3c8:	fc 01       	movw	r30, r24
 3ca:	20 83       	st	Z, r18
    while (1) 
    {
			// loop while s1 is pressed
			while(PORTE_IN == PIN0_bm){
 3cc:	14 c0       	rjmp	.+40     	; 0x3f6 <main+0x58>
				if(TCD0_CTRLA!=0x07)
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	99 e0       	ldi	r25, 0x09	; 9
 3d2:	fc 01       	movw	r30, r24
 3d4:	80 81       	ld	r24, Z
 3d6:	87 30       	cpi	r24, 0x07	; 7
 3d8:	29 f0       	breq	.+10     	; 0x3e4 <main+0x46>
					TCD0_CTRLA = 0x07;
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	99 e0       	ldi	r25, 0x09	; 9
 3de:	27 e0       	ldi	r18, 0x07	; 7
 3e0:	fc 01       	movw	r30, r24
 3e2:	20 83       	st	Z, r18
				PORTC_OUT = TCD0_CNT;
 3e4:	84 e4       	ldi	r24, 0x44	; 68
 3e6:	96 e0       	ldi	r25, 0x06	; 6
 3e8:	20 e2       	ldi	r18, 0x20	; 32
 3ea:	39 e0       	ldi	r19, 0x09	; 9
 3ec:	f9 01       	movw	r30, r18
 3ee:	20 81       	ld	r18, Z
 3f0:	31 81       	ldd	r19, Z+1	; 0x01
 3f2:	fc 01       	movw	r30, r24
 3f4:	20 83       	st	Z, r18
	PORTC_OUT = 0xFF;
	PORTC_DIRSET = 0xff;
    while (1) 
    {
			// loop while s1 is pressed
			while(PORTE_IN == PIN0_bm){
 3f6:	88 e8       	ldi	r24, 0x88	; 136
 3f8:	96 e0       	ldi	r25, 0x06	; 6
 3fa:	fc 01       	movw	r30, r24
 3fc:	80 81       	ld	r24, Z
 3fe:	81 30       	cpi	r24, 0x01	; 1
 400:	31 f3       	breq	.-52     	; 0x3ce <main+0x30>
				if(TCD0_CTRLA!=0x07)
					TCD0_CTRLA = 0x07;
				PORTC_OUT = TCD0_CNT;
			}
			TCD0_CTRLA = 0x00;	// stop tcc0
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	99 e0       	ldi	r25, 0x09	; 9
 406:	fc 01       	movw	r30, r24
 408:	10 82       	st	Z, r1
			// loop while s2 is pressed
			while(PORTE_IN == PIN1_bm){
 40a:	14 c0       	rjmp	.+40     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
				if(TCD1_CTRLA!=0x07)
 40c:	80 e4       	ldi	r24, 0x40	; 64
 40e:	99 e0       	ldi	r25, 0x09	; 9
 410:	fc 01       	movw	r30, r24
 412:	80 81       	ld	r24, Z
 414:	87 30       	cpi	r24, 0x07	; 7
 416:	29 f0       	breq	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
					TCD1_CTRLA = 0x07;
 418:	80 e4       	ldi	r24, 0x40	; 64
 41a:	99 e0       	ldi	r25, 0x09	; 9
 41c:	27 e0       	ldi	r18, 0x07	; 7
 41e:	fc 01       	movw	r30, r24
 420:	20 83       	st	Z, r18
				PORTC_OUT = TCD1_CNT;
 422:	84 e4       	ldi	r24, 0x44	; 68
 424:	96 e0       	ldi	r25, 0x06	; 6
 426:	20 e6       	ldi	r18, 0x60	; 96
 428:	39 e0       	ldi	r19, 0x09	; 9
 42a:	f9 01       	movw	r30, r18
 42c:	20 81       	ld	r18, Z
 42e:	31 81       	ldd	r19, Z+1	; 0x01
 430:	fc 01       	movw	r30, r24
 432:	20 83       	st	Z, r18
					TCD0_CTRLA = 0x07;
				PORTC_OUT = TCD0_CNT;
			}
			TCD0_CTRLA = 0x00;	// stop tcc0
			// loop while s2 is pressed
			while(PORTE_IN == PIN1_bm){
 434:	88 e8       	ldi	r24, 0x88	; 136
 436:	96 e0       	ldi	r25, 0x06	; 6
 438:	fc 01       	movw	r30, r24
 43a:	80 81       	ld	r24, Z
 43c:	82 30       	cpi	r24, 0x02	; 2
 43e:	31 f3       	breq	.-52     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
				if(TCD1_CTRLA!=0x07)
					TCD1_CTRLA = 0x07;
				PORTC_OUT = TCD1_CNT;
			}
			TCD1_CTRLA = 0x00;	// stop tcc1
 440:	80 e4       	ldi	r24, 0x40	; 64
 442:	99 e0       	ldi	r25, 0x09	; 9
 444:	fc 01       	movw	r30, r24
 446:	10 82       	st	Z, r1
    }
 448:	c1 cf       	rjmp	.-126    	; 0x3cc <main+0x2e>

0000044a <_exit>:
 44a:	f8 94       	cli

0000044c <__stop_program>:
 44c:	ff cf       	rjmp	.-2      	; 0x44c <__stop_program>
